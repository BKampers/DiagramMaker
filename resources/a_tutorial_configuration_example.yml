# Tutorial:
# When nothing is configured here, figures are plotted as colored dots. 
# Note that the X-axis and Y-axis adapt to the ranges of the figures.

# Rahter expand the axes to the origin? Just apply the next two lines by 
# removing the comment sign (#):
#XWindowMinimum: 0
#YWindowMinimum: 0

# To define the entire window, apply two more lines
#XWindowMaximum: 6
#YWindowMaximum: 6

# Want to see a legend? Define its location with the next three lines
#legendPosition: 
#   x: 50
#   y: 10
# That does not look quite good, does it? Let's give it some space:
#topMargin: 75
# Or else make some more space with
#leftMargin: 75
#rightMargin: 75
#bottomMargin: 75
# and move the legend to another position.

# If you want to see a bar diagram, configure it like this:
#graphDefaults:
#   type: bar
# Optionally set the bar width
#   width: 15

# If you want to see a line diagram, configure it like this:
#graphDefaults:
#   type: line
# Optionally set the line dash and width
#   graphDrawStyle: 
#       stroke: 
#           width: 3
#           dash: [20, 5]

# If you want to see a scatter, configure it like this:
#graphDefaults:
#   type: scatter
# Note that the dots grow bigger for datapoints that occur
# multiple times in your figures

# It is also possible to define a type per graph:
#graphs:
#    A:
#        type: rectangle
#        width: 7
#        height: 7
#        shift: 25 # For bar types, if you like a bit of space between the bars, apply a shift
#        graphDrawStyle:
#            borderColor: BLACK # AWT constant
#            color: 0-0-255 # (A)RGB
#            topAreaColor: 7FDF0000  # For line graphs, optionally fill the area above the graph with (A)RGB
#    B:
#        type: dot
#        shift: -25 # For bar types, if you like a bit of space between the bars, apply a shift
#        graphDrawStyle:
#            colors: [ ff0000, WHITE, 0-0-255 ]
#            bottomAreaColor: 127-0-172-0 # For line graphs, optionally fill the area below the graph with (A)RGB

# In the example above graph C will not be drawn unless the graphDefaults
# property is configured. 

# To stack data, define the order of the graphs from bottom to top 
#stack:
#  - B
#  - A

# Add a grid:
#gridStyle:
#    XColor: BLACK
#    XStroke: 
#        width: 1
#        dash: [1, 3]
#    YColor: AAAAAA
#    YStroke: 
#        width: 1
#        dash: [4]
# ... or:
#gridStyle:
#    color: DARK_GRAY
#    stroke: 
#        width: 0.5
#        dash: [2, 6]    

# To move the leftmost and rightmost data away form the borders:
#leftOffset: 10
#rightOffset: 10

# Specify alternating background colors
#gridStyle:
#    backgrounds: [ [ e6f6f7, bfeef2, ffffff ] ]
# Or specify gradient background colors
#    backgrounds: [ [ e6f6f7, bfeef2, ffffff ], [ dddddd, dddddd, dddddd ] ] 
# Specify the axis to alternate the colors along
#gridMode: X # X or Y

# Draw a second Y-axis for a different range or unit
#YWindows:
#    A: # graph name
#        minimum: 1
#        maximum: 5
#    B: # graph name
#        minimum: 0
#        maximum: 3    
#axisStyleDefaults:
#    axisColor: GRAY 
#    markerColor: GRAY
#    labelColor: GRAY
#    unitColor: GRAY
#    titleColor: GRAY
#YAxes:
#    - position: MINIMUM
#      key: A # graph name
#      title: length # configure leftMarging if you find the axis drawn off canvas
#      unit: cm
#    - position: MAXIMUM
#      key: B # graph name
#      title: weight # configure rightMarging if you find the axis drawn off canvas
#      unit: kg
#      axisStyle:
#          labelOffset: 25

# If you want to see a pie chart configure like this:
#graphDefaults:
#   type: pie
# Note that you can have only have two colums in your figures. The first column
# will contain the "labels" of the pie chart, the second column will contain
# the values to the labels.